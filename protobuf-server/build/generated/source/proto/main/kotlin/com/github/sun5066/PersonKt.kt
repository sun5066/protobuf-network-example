//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: com/github/sun5066/sampe.proto

package com.github.sun5066;

@kotlin.jvm.JvmName("-initializeperson")
inline fun person(block: com.github.sun5066.PersonKt.Dsl.() -> kotlin.Unit): com.github.sun5066.Person =
  com.github.sun5066.PersonKt.Dsl._create(com.github.sun5066.Person.newBuilder()).apply { block() }._build()
object PersonKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.github.sun5066.Person.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.sun5066.Person.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.sun5066.Person = _builder.build()

    /**
     * <code>string name = 1;</code>
     */
    var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 1;</code>
     */
    fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>int32 id = 2;</code>
     */
    var id: kotlin.Int
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>int32 id = 2;</code>
     */
    fun clearId() {
      _builder.clearId()
    }

    /**
     * <code>string email = 3;</code>
     */
    var email: kotlin.String
      @JvmName("getEmail")
      get() = _builder.getEmail()
      @JvmName("setEmail")
      set(value) {
        _builder.setEmail(value)
      }
    /**
     * <code>string email = 3;</code>
     */
    fun clearEmail() {
      _builder.clearEmail()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class PhonesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .grpcchat.Person.PhoneNumber phones = 4;</code>
     */
     val phones: com.google.protobuf.kotlin.DslList<com.github.sun5066.Person.PhoneNumber, PhonesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPhonesList()
      )
    /**
     * <code>repeated .grpcchat.Person.PhoneNumber phones = 4;</code>
     * @param value The phones to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPhones")
    fun com.google.protobuf.kotlin.DslList<com.github.sun5066.Person.PhoneNumber, PhonesProxy>.add(value: com.github.sun5066.Person.PhoneNumber) {
      _builder.addPhones(value)
    }
    /**
     * <code>repeated .grpcchat.Person.PhoneNumber phones = 4;</code>
     * @param value The phones to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPhones")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<com.github.sun5066.Person.PhoneNumber, PhonesProxy>.plusAssign(value: com.github.sun5066.Person.PhoneNumber) {
      add(value)
    }
    /**
     * <code>repeated .grpcchat.Person.PhoneNumber phones = 4;</code>
     * @param values The phones to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPhones")
    fun com.google.protobuf.kotlin.DslList<com.github.sun5066.Person.PhoneNumber, PhonesProxy>.addAll(values: kotlin.collections.Iterable<com.github.sun5066.Person.PhoneNumber>) {
      _builder.addAllPhones(values)
    }
    /**
     * <code>repeated .grpcchat.Person.PhoneNumber phones = 4;</code>
     * @param values The phones to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPhones")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<com.github.sun5066.Person.PhoneNumber, PhonesProxy>.plusAssign(values: kotlin.collections.Iterable<com.github.sun5066.Person.PhoneNumber>) {
      addAll(values)
    }
    /**
     * <code>repeated .grpcchat.Person.PhoneNumber phones = 4;</code>
     * @param index The index to set the value at.
     * @param value The phones to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPhones")
    operator fun com.google.protobuf.kotlin.DslList<com.github.sun5066.Person.PhoneNumber, PhonesProxy>.set(index: kotlin.Int, value: com.github.sun5066.Person.PhoneNumber) {
      _builder.setPhones(index, value)
    }
    /**
     * <code>repeated .grpcchat.Person.PhoneNumber phones = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPhones")
    fun com.google.protobuf.kotlin.DslList<com.github.sun5066.Person.PhoneNumber, PhonesProxy>.clear() {
      _builder.clearPhones()
    }

  }
  @kotlin.jvm.JvmName("-initializephoneNumber")
  inline fun phoneNumber(block: com.github.sun5066.PersonKt.PhoneNumberKt.Dsl.() -> kotlin.Unit): com.github.sun5066.Person.PhoneNumber =
    com.github.sun5066.PersonKt.PhoneNumberKt.Dsl._create(com.github.sun5066.Person.PhoneNumber.newBuilder()).apply { block() }._build()
  object PhoneNumberKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
      private val _builder: com.github.sun5066.Person.PhoneNumber.Builder
    ) {
      companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.github.sun5066.Person.PhoneNumber.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.github.sun5066.Person.PhoneNumber = _builder.build()

      /**
       * <code>string number = 1;</code>
       */
      var number: kotlin.String
        @JvmName("getNumber")
        get() = _builder.getNumber()
        @JvmName("setNumber")
        set(value) {
          _builder.setNumber(value)
        }
      /**
       * <code>string number = 1;</code>
       */
      fun clearNumber() {
        _builder.clearNumber()
      }

      /**
       * <code>optional .grpcchat.Person.PhoneType type = 2;</code>
       */
       var type: com.github.sun5066.Person.PhoneType
        @JvmName("getType")
        get() = _builder.getType()
        @JvmName("setType")
        set(value) {
          _builder.setType(value)
        }
      /**
       * <code>optional .grpcchat.Person.PhoneType type = 2;</code>
       */
      fun clearType() {
        _builder.clearType()
      }
      /**
       * <code>optional .grpcchat.Person.PhoneType type = 2;</code>
       * @return Whether the type field is set.
       */
      fun hasType(): kotlin.Boolean {
        return _builder.hasType()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.github.sun5066.Person.copy(block: com.github.sun5066.PersonKt.Dsl.() -> kotlin.Unit): com.github.sun5066.Person =
  com.github.sun5066.PersonKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
inline fun com.github.sun5066.Person.PhoneNumber.copy(block: com.github.sun5066.PersonKt.PhoneNumberKt.Dsl.() -> kotlin.Unit): com.github.sun5066.Person.PhoneNumber =
  com.github.sun5066.PersonKt.PhoneNumberKt.Dsl._create(this.toBuilder()).apply { block() }._build()

