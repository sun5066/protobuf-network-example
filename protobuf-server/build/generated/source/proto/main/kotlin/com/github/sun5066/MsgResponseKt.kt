//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: com/github/sun5066/sampe.proto

package com.github.sun5066;

@kotlin.jvm.JvmName("-initializemsgResponse")
inline fun msgResponse(block: com.github.sun5066.MsgResponseKt.Dsl.() -> kotlin.Unit): com.github.sun5066.MsgResponse =
  com.github.sun5066.MsgResponseKt.Dsl._create(com.github.sun5066.MsgResponse.newBuilder()).apply { block() }._build()
object MsgResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.github.sun5066.MsgResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.sun5066.MsgResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.sun5066.MsgResponse = _builder.build()

    /**
     * <code>string text = 1;</code>
     */
    var text: kotlin.String
      @JvmName("getText")
      get() = _builder.getText()
      @JvmName("setText")
      set(value) {
        _builder.setText(value)
      }
    /**
     * <code>string text = 1;</code>
     */
    fun clearText() {
      _builder.clearText()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.github.sun5066.MsgResponse.copy(block: com.github.sun5066.MsgResponseKt.Dsl.() -> kotlin.Unit): com.github.sun5066.MsgResponse =
  com.github.sun5066.MsgResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

